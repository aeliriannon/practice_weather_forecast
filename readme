1. Инииализируем наш проект
   npm init
2. Устанавливаем webpack
   npm i -D webpack webpack-cli
3. В корне проекта создаем 
   -- src - папку
   -- webpack.config.js - файл
4. В папке src создаем index.js
5. Вносим настройки в webpack
6. Устанавливаем пакет для локального сервера
   npm i -D webpack-dev-server
7. Добавляем в конфиг настройки для source-map
8. Добавляем скрипты в package.json для работы со сборкой
    "start": "webpack serve", // Запускает webpack-dev-server
    "build": "webpack", // Собирает проект в режиме разработки
    "build-prod": "webpack --mode=production", // собирает проект для продакшена
    "clean": "rd /s /q dist" // удаляет директорию dist
9. Вносим в конфиг изменения для работы верной скриптов
10.Вносим изменения в конфиг для правильной работы ассетов
11.Добавляем поддержку html
   npm i -D html-loader html-webpack-plugin
12.Вносим изменения в конфиг для правильной работы с html
13.Добавляем поддержку стилей Sass
   npm i -D mini-css-extract-plugin css-loader sass-loader sass postcss postcss-preset-env postcss-loader
14.Создаем в корне проекта файл postcss.config.js - инструмент автоматически подставляет вендорные префиксы в стилях
   в зависимости от вашей конфигурации browserslist
15.Экспортируем этот модуль в конфиг
16.Вносим изменения в конфиг
17.Импортируе файл стилей в index.js-beautif
   import './styles/main.scss';
18.В корне приложения создадим файл .browserslistrc - конфиг, 
   который служит для обозначения браузеров, которые должны поддерживаться данным приложением.
19.Вносим конфигурацию в браузерлист
20.Вносим изменения в конфиг
21.Добавляем поддержку изображений и шрифтов в конфиг(настройки)
22.Устанвливаем зависимости для babel
   npm i -D @babel/core @babel/preset-env babel-loader
23.Создаем в корне проекта файл babel.config.js
24.Экспортируем babel в конфиг
25.Добавлям настройки для babel в конфиг
26.Установим необходимые компоненты для reaction
   npm i -D @babel/preset-react cross-env react-refresh pmmmwh/react-refresh-webpack-plugin
27.Вносим изменения в конфиг
28.Вносим изменения в скрипты
29.Добывляем поддержку реакта в babel.config
30.Добавляем поддержку JSX в конфиг